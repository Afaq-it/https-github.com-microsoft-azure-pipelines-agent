parameters:
- name: version
  type: string
  displayName: Version
- name: derivedFrom
  type: string
  displayName: Derived From Version
  default: latest
- name: skipTests
  type: boolean
  default: false
  displayName: Skip Tests
# buildStageOnly is useful for testing changes of the build stage which cannot be tested
# in the ci project, like signing, without actually doing a release
- name: buildStageOnly
  type: boolean
  default: false
  displayName: Build Stage Only

variables:
  releaseBranch: releases/${{ parameters.version }}

extends:
  template: .azure-pipelines/pipeline.yml
  parameters:
    branch:  ${{ variables.releaseBranch }}
    componentDetection: false
    test: ${{ not(parameters.skipTests) }}
    sign: true
    publishArtifacts: true

    ${{ if not(parameters.buildStageOnly) }}:
      preBuildStages:
      - ${{ if true }}:
        - stage: Create_Release_Branch
          displayName: Create Release Branch
          jobs:
          ################################################################################
          - job: Create_Release_Branch
          ################################################################################
            displayName: Create Release Branch
            pool:
              vmImage: ubuntu-18.04

            steps:
            - checkout: self

            - task: NodeTool@0
              displayName: Use node 14.15.1
              inputs:
                versionSpec: "14.15.1"

            - script: |
                cd release
                npm install
                node createReleaseBranch.js ${{ parameters.version }} --derivedFrom=${{ parameters.derivedFrom }}
              env:
                EDITOR: cat
                PAT: $(GithubToken)
              displayName: Push release branch to GitHub

    ${{ if not(parameters.buildStageOnly) }}:
      postBuildStages:
      - stage: Release
        jobs:
        ################################################################################
        - job: publish_agent_packages
        ################################################################################
          displayName: Publish Agents (Windows/Linux/OSX)
          pool:
            name: RMAgentsProdAME
          steps:

          # Clean
          - checkout: self
            clean: true

          # Switch to release branch
          - template: switch-branch.yml
            parameters:
              branch: ${{ variables.releaseBranch }}

          # Download all agent packages from all previous phases
          - task: DownloadBuildArtifacts@0
            displayName: Download Agent Packages
            inputs:
              artifactName: agent

          # Download all agent hashes created in previous phases
          - task: DownloadBuildArtifacts@0
            displayName: Download Agent Hashes
            inputs:
              artifactName: hash
              downloadPath: $(Build.SourcesDirectory)/_hashes

          # Fill release notes with agent version and package hashes
          - script: |
              cd release
              node fillReleaseNotesTemplate.js ${{ parameters.version }}
            displayName: Fill release notes

      - stage: CreatePRs
        jobs:
        ################################################################################
        - job: create_ado_prs
        ################################################################################
          displayName: Create PRs in AzureDevOps and ConfigChange
          pool:
            vmImage: ubuntu-18.04

          steps:
          - checkout: self

          - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
            - script: git checkout ${{ variables.releaseBranch }}
              displayName: Checkout release branch

          # Download all agent hashes created in previous phases
          - task: DownloadBuildArtifacts@0
            displayName: Download Agent Hashes
            inputs:
              artifactName: hash
              downloadPath: $(Build.SourcesDirectory)/_hashes

          - bash: |
              set -x
              cd release
              npm install
              ls
              node createAdoPrs.js ${{ parameters.version }}
            displayName: Create PRs in AzureDevOps and ConfigChange
            env:
              USERNAME: $(User)
              PAT: $(AdoPAT)
              USEREMAIL: $(Email)
